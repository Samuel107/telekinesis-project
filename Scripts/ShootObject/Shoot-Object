#pragma strict

// public
public var objectFired : GameObject; // put in gameObject to shoot
public var mainCamera : GameObject; // needs mainCamera transform (finds if null)
public var cardboardMain : GameObject; // needs cardboardMain to stop movement (so you can rapid fire. finds if null)
public var objectFiredSpeed : int = 2500; // objectFired speed

// private
private var fireOn : boolean = false; // turns on when button pushed, starts FireAbility and Update
private var lockAndLoaded = false; // stops first bullet (first bullet shot when clicking button)
private var moveObjectScript : MoveObject; // MoveObject script
private var movingScript : MovingScript; // MovingScript script


function Start () {
	if (mainCamera == null) {
		mainCamera = GameObject.Find("Main Camera"); // finds Main Camera gameobject if nothing assigned
	}
	if (cardboardMain == null) { 
		cardboardMain = GameObject.Find("CardboardMain"); // finds CardboardMain gameobject if nothing assigned
	}
}

function Update () {
	if (fireOn && Cardboard.SDK.Triggered == true) { // gives ability to fire objects
		if (lockAndLoaded == false) { // stops first bullet from activating (first bullet was hitting control pad when hitting button)
			lockAndLoaded = true; 
		}
		else {
			var object = Instantiate(objectFired, mainCamera.transform.position, mainCamera.transform.rotation); // spawns our objectFired, gives it camera position and rotation
			object.GetComponent.<Rigidbody>().AddForce(object.transform.forward * objectFiredSpeed); // Shoots object forward 
		}
	}
}

function FireAbility() {
	if (fireOn == false) {
		//Debug.Log("Button 5 On");
		
		for (var go : GameObject in GameObject.FindGameObjectsWithTag("abc")) { // finds every gameobject with tag "abc" (our moveable objects)
			//Debug.Log(go);
			
			moveObjectScript = go.GetComponent(MoveObject); // grabs MoveObject script from go, this will error if go does not have MoveObject script
			
			moveObjectScript.allow = false; // **** Since I had to disable all of MoveObject script (update and certain functions) 
			                                // moveObjectScript.enabled = false didn't not work because it only disables update().
							// So I had to create a new bool var in MoveObject script, then add an if case to update and each function.
							// When false, nothing happens in MoveObject script.
		}
		
		movingScript = cardboardMain.GetComponent(MovingScript); // grabs moving script
		movingScript.enabled = false; // turns off moving script (no event trigger, so easy turn off)
		GetComponent.<Renderer>().material.color = Color.green; // changes button color to green
		fireOn = true; // turns update if statement true (gives ability to shoot objectsFired)
	}
	else {
		//Debug.Log("Button 5 Off");
		
		for (var go : GameObject in GameObject.FindGameObjectsWithTag("abc")) { // grabs all gameObjects with tag "abc" (our moveable objects)
			moveObjectScript = go.GetComponent(MoveObject); // grabs MoveObject script from go
			moveObjectScript.allow = true; // turns ability to pick up and throw objects on 
		}
		
		movingScript = cardboardMain.GetComponent(MovingScript); // grabs movingScript from cardboardMain 
		movingScript.enabled = true; // turns on update() in movingScript
		GetComponent.<Renderer>().material.color = Color.red; // changes button color to red
		fireOn = false; // turns update() if statement false (no more shooting objectFired)
	}
}
